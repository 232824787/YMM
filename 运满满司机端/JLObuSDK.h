//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "JLBleCentralManagerDelegate.h"

@class JLBleCentralManager, JLBleDevice, JLBleDeviceBaseSDK, JLCostService, JLGetMac1Service, JLTradeService, JLTransCommandService, NSMutableArray, NSMutableDictionary, NSString;

@interface JLObuSDK : NSObject <JLBleCentralManagerDelegate>
{
    _Bool _isHaveBusiness;
    int _areaFlag;
    id <JLObuSDKDelegate> _delegate;
    JLBleCentralManager *_bleCentral;
    JLBleDeviceBaseSDK *_protocolSDK;
    JLBleDevice *_connectedDevice;
    NSMutableArray *_historys;
    CDUnknownBlockType _tempCommandBlock;
    NSString *_serviceFlag;
    unsigned long long _currentWorkMode;
    JLTradeService *_tradeService;
    JLCostService *_costService;
    JLGetMac1Service *_mac1Service;
    JLTransCommandService *_commandService;
    NSMutableDictionary *_workInfo;
}

+ (id)sharedObuSDKWithDelegate:(id)arg1;
+ (id)sharedObuSDK;
@property(retain, nonatomic) NSMutableDictionary *workInfo; // @synthesize workInfo=_workInfo;
@property(nonatomic) _Bool isHaveBusiness; // @synthesize isHaveBusiness=_isHaveBusiness;
@property(retain, nonatomic) JLTransCommandService *commandService; // @synthesize commandService=_commandService;
@property(retain, nonatomic) JLGetMac1Service *mac1Service; // @synthesize mac1Service=_mac1Service;
@property(retain, nonatomic) JLCostService *costService; // @synthesize costService=_costService;
@property(retain, nonatomic) JLTradeService *tradeService; // @synthesize tradeService=_tradeService;
@property(nonatomic) unsigned long long currentWorkMode; // @synthesize currentWorkMode=_currentWorkMode;
@property(copy, nonatomic) NSString *serviceFlag; // @synthesize serviceFlag=_serviceFlag;
@property(copy, nonatomic) CDUnknownBlockType tempCommandBlock; // @synthesize tempCommandBlock=_tempCommandBlock;
@property(retain, nonatomic) NSMutableArray *historys; // @synthesize historys=_historys;
@property(retain, nonatomic) JLBleDevice *connectedDevice; // @synthesize connectedDevice=_connectedDevice;
@property(retain, nonatomic) JLBleDeviceBaseSDK *protocolSDK; // @synthesize protocolSDK=_protocolSDK;
@property(nonatomic) int areaFlag; // @synthesize areaFlag=_areaFlag;
@property(retain, nonatomic) JLBleCentralManager *bleCentral; // @synthesize bleCentral=_bleCentral;
@property(nonatomic) __weak id <JLObuSDKDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (void)jlDisConnected:(id)arg1;
- (void)jlWorkFinishWithCode:(int)arg1 data:(id)arg2 message:(id)arg3 callBack:(CDUnknownBlockType)arg4;
- (void)jlConnectSuccessWithDevice:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)upDateKey:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)getDeveiceInitWithCallBack:(CDUnknownBlockType)arg1;
- (void)setSN:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)setMac:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)getBleMacWithCallBack:(CDUnknownBlockType)arg1;
- (void)getBatteyRemain:(CDUnknownBlockType)arg1;
- (void)esamResetWithCallBack:(CDUnknownBlockType)arg1;
- (void)icc_ChannelWithSecretCos:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)esam_ChannelWithSecretCos:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)esam_ChannelWithCos:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)initAuthDevData:(id)arg1 requestData:(id)arg2 DeviceSN:(id)arg3 callBack:(CDUnknownBlockType)arg4;
- (void)checkAuthData:(id)arg1 deviceSN:(id)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)getDeveiceSN:(CDUnknownBlockType)arg1;
- (void)unbindOBU:(CDUnknownBlockType)arg1;
- (void)bindOBU:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)shakeHands:(CDUnknownBlockType)arg1;
- (void)transCommand:(id)arg1 encode:(unsigned char)arg2 reqData:(id)arg3 reqDataLen:(unsigned long long)arg4 callBack:(CDUnknownBlockType)arg5;
- (void)cardCommand:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)resetCardCommandWithcallBack:(CDUnknownBlockType)arg1;
- (void)readCardConsumeRecord:(int)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)readCardTransactionRecord:(id)arg1 maxNumber:(int)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)loadCreditWriteCard:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)loadCreditGetMac1:(id)arg1 credit:(id)arg2 cardId:(id)arg3 terminalNo:(id)arg4 pinCode:(id)arg5 procType:(id)arg6 keyIndex:(id)arg7 callBack:(CDUnknownBlockType)arg8;
- (void)readCardOwnerRecord:(CDUnknownBlockType)arg1;
- (void)getObuInformation:(CDUnknownBlockType)arg1;
- (void)getDevInformation:(CDUnknownBlockType)arg1;
- (void)getVersion:(CDUnknownBlockType)arg1;
- (void)checkBattery:(CDUnknownBlockType)arg1;
- (void)getCardInformation:(CDUnknownBlockType)arg1;
- (_Bool)checkConnectState;
- (void)disconnectDevice:(CDUnknownBlockType)arg1;
- (void)connectDeviceWithId:(id)arg1 name:(id)arg2 timeout:(int)arg3 callBack:(CDUnknownBlockType)arg4;
- (void)connectDevice:(id)arg1 address:(id)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)connectDevice:(id)arg1 timeout:(int)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)jlPrivateconnectDevice:(int)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)connectDevice:(int)arg1 callBack:(CDUnknownBlockType)arg2;
- (id)checkUUIDPath:(int)arg1 uuid:(id)arg2;
- (void)connectDeviceWithName:(id)arg1 timeout:(int)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)stopScan;
- (void)startScan:(CDUnknownBlockType)arg1;
- (void)scanBleDevice:(int)arg1 callBack:(CDUnknownBlockType)arg2;
- (unsigned char)checkConnection:(CDUnknownBlockType)arg1;
- (unsigned char)isEnabledBluetooth;
- (void)connectFailed;
- (void)connectSuccess;
- (void)didDiscoverBlueObu:(id)arg1 desc:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

